{"version":3,"file":"static/js/72.cf6c0764.chunk.js","mappings":"+LAEO,MAAMA,EAAOC,EAAAA,GAAOC,KAAIC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mG,oDCMxB,MAAMC,EAAcA,KACzB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,KAC7BG,KAAMC,EAAQ,QAAEC,IAAYC,EAAAA,EAAAA,OAC7BC,GAAY,UAAEC,KAAeC,EAAAA,EAAAA,MA0BpC,OACEC,EAAAA,EAAAA,MAAClB,EAAI,CAACmB,SAzBaC,UACnBC,EAAEC,iBAOF,GANqBC,MAAMC,QAAQZ,GAC/BA,EAASa,MACPC,GAAWA,EAAQpB,KAAKqB,gBAAkBrB,EAAKqB,gBAEjD,KAIF,OADAC,IAAAA,OAAgBC,QAAQ,GAADC,OAAIxB,EAAI,6BACxB,EAGT,UACQS,EAAW,CAAET,OAAMG,WAAUsB,SACnCH,IAAAA,OAAgBI,QAAQ,8BACxBzB,EAAQ,IACRG,EAAU,IACVG,GACF,CAAE,MAAOoB,GACPL,IAAAA,OAAgBC,QAAQ,2CAC1B,GAI6BK,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,YAAWF,SAAC,UAC3BC,EAAAA,EAAAA,KAAA,SACEE,KAAK,OACL/B,KAAK,OACLgC,MAAOhC,EACPiC,GAAG,YACHC,UAAQ,EACRC,SAAUpB,GAAKd,EAAQc,EAAEqB,OAAOJ,UAElCH,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,cAAaF,SAAC,YAC7BC,EAAAA,EAAAA,KAAA,SACEE,KAAK,MACL/B,KAAK,SACLgC,MAAO7B,EACP8B,GAAG,cACHC,UAAQ,EACRC,SAAUpB,GAAKX,EAAUW,EAAEqB,OAAOJ,UAEpCH,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACC,YAAY,OAAOC,KAAK,KAAKR,KAAK,SAASrB,UAAWA,EAAUkB,SAAC,kBAGpE,E,gBC3DJ,MAAMY,EAAO7C,EAAAA,GAAO8C,GAAE5C,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+HCItB,SAAS4C,EAAOC,GAAgC,IAA/B,QAAEvB,EAAO,gBAAEwB,GAAiBD,EAClD,MAAM,IAAEE,EAAG,KAAE7C,EAAI,OAAEG,GAAWiB,GACvB0B,GAAe,UAAEpC,KAAeqC,EAAAA,EAAAA,MAavC,OACEnC,EAAAA,EAAAA,MAAC4B,EAAI,CAAAZ,SAAA,EACHhB,EAAAA,EAAAA,MAAA,KAAAgB,SAAA,CACG5B,EAAK,MAAIG,MAEZ0B,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CACLC,YAAY,OACZC,KAAK,KACLR,KAAK,SACLiB,QApBsBlC,UAC1B,UACQgC,EAAcD,GAAKpB,SACzBH,IAAAA,OAAgBI,QAAQ,mBACxBkB,GACF,CAAE,MAAOjB,GACPL,IAAAA,OAAgBC,QAAQ,4BACxB0B,QAAQtB,MAAM,0BAA2BA,EAC3C,GAaIjB,UAAWA,EAAUkB,SACtB,aAKP,C,cCnCO,MAAMsB,EAAeC,GAASA,EAAMC,QAKNC,EAAAA,EAAAA,IACnC,CAH4BF,GAASA,EAAM7C,SAASgD,MAGnCJ,IAEjB,CAAC5C,EAAUiD,IACFjD,EAAS8C,QAAOhC,GACrBA,EAAQpB,KAAKqB,cAAcmC,SAASD,EAAYlC,cAAe,O,cCJ9D,SAASoC,IACd,MAAML,GAASM,EAAAA,EAAAA,IAAYR,IACnB7C,KAAMC,EAAQ,MAAEqB,EAAK,UAAEjB,EAAS,QAAEH,IAAYC,EAAAA,EAAAA,MAQhDmD,EAAkBrD,EANGsD,EAACtD,EAAU8C,IAC7B9C,EAAS8C,QAAOhC,GACrBA,EAAQpB,KAAKqB,cAAcmC,SAASJ,EAAO/B,iBAIZuC,CAAmBtD,EAAU8C,GAAU,GAE1E,OAAI1C,GAAkBmB,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,IACzBlC,GAAcf,EAAAA,EAAAA,MAAA,KAAAgB,SAAA,CAAG,2BAAyBD,EAAMmC,YAGlDlD,EAAAA,EAAAA,MAAA,MAAAgB,SAAA,CAC8B,IAA3B+B,EAAgBI,SAAgBlC,EAAAA,EAAAA,KAACW,EAAI,CAAAZ,SAAC,gCACtC+B,EAAgBI,OAAS,GACxBJ,EAAgBK,KAAIC,IAClBpC,EAAAA,EAAAA,KAACa,EAAO,CAAgBtB,QAAS6C,EAAMrB,gBAAiBrC,GAA1C0D,EAAKpB,SAI7B,C,gBC9BO,MAAMqB,EAAYvE,EAAAA,GAAOwE,IAAGtE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iHCItBsE,EAASA,KACpB,MAAMC,GAAWC,EAAAA,EAAAA,MACXlB,GAASM,EAAAA,EAAAA,IAAYR,GAM3B,OACEtC,EAAAA,EAAAA,MAACsD,EAAS,CAAAtC,SAAA,EACRC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,mBACPC,EAAAA,EAAAA,KAAA,SACEE,KAAK,OACLC,MAAOoB,EACPjB,SAVgBpB,IACpBsD,GAASE,EAAAA,EAAAA,GAAUxD,EAAEqB,OAAOJ,OAAO,EAU/BwC,YAAY,iBAEJ,E,MCrBT,MAAMC,EAAa9E,EAAAA,GAAOwE,IAAGtE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4WCuBpC,EAjBiB4E,KACf,MAAQrE,KAAMC,EAAQ,MAAEqB,EAAK,UAAEjB,IAAcF,EAAAA,EAAAA,MAE7C,OACEI,EAAAA,EAAAA,MAAC6D,EAAU,CAAA7C,SAAA,EACTC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,+BACHC,EAAAA,EAAAA,KAAC9B,EAAW,KACZ8B,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAACuC,EAAM,IACNzC,IAASf,EAAAA,EAAAA,MAAA,KAAAgB,SAAA,CAAG,UAAQD,EAAMmC,WAC1BpD,IAAamB,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,IACpBvD,IAAYuB,EAAAA,EAAAA,KAAC4B,EAAW,MACd,C","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","redux/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  input {\n    margin-bottom: 14px;\n  }\n`;\n","\n\nimport React, { useState } from 'react';\nimport { Form } from './ContactForm.styled';\nimport { useAddContactMutation, useFetchContactsQuery } from '../../services/contactsApi';\nimport { Button } from '@chakra-ui/react';\nimport Notiflix from 'notiflix';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { data: contacts, refetch } = useFetchContactsQuery();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const searchResult = Array.isArray(contacts)\n      ? contacts.find(\n          contact => contact.name.toLowerCase() === name.toLowerCase()\n        )\n      : null;\n\n    if (searchResult) {\n      Notiflix.Notify.failure(`${name} is already in contacts`);\n      return false;\n    }\n\n    try {\n      await addContact({ name, number }).unwrap();\n      Notiflix.Notify.success('Contact added successfully');\n      setName('');\n      setNumber('');\n      refetch(); // Обновление списка контактов\n    } catch (error) {\n      Notiflix.Notify.failure('Failed to add contact. Please try again.');\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <label htmlFor=\"inputName\">Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        id=\"inputName\"\n        required\n        onChange={e => setName(e.target.value)}\n      />\n      <label htmlFor=\"inputNumber\">Number</label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        id=\"inputNumber\"\n        required\n        onChange={e => setNumber(e.target.value)}\n      />\n      <Button colorScheme=\"blue\" size=\"sm\" type=\"submit\" isLoading={isLoading}>\n        Add contact\n      </Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n\n  button {\n    padding: 0 10px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Item } from './Contact.styled';\nimport { useDeleteContactMutation } from '../../services/contactsApi';\nimport { Button } from '@chakra-ui/react';\nimport Notiflix from 'notiflix';\n\nexport function Contact({ contact, refetchContacts }) {\n  const { _id, name, number } = contact;\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  const handleDeleteContact = async () => {\n    try {\n      await deleteContact(_id).unwrap();\n      Notiflix.Notify.success('Contact deleted');\n      refetchContacts(); // Обновление данных после удаления\n    } catch (error) {\n      Notiflix.Notify.failure('Failed to delete contact');\n      console.error('Error deleting contact:', error);\n    }\n  };\n\n  return (\n    <Item>\n      <p>\n        {name} : {number}\n      </p>\n      <Button\n        colorScheme=\"blue\"\n        size=\"xs\"\n        type=\"button\"\n        onClick={handleDeleteContact}\n        isLoading={isLoading}\n      >\n        Delete\n      </Button>\n    </Item>\n  );\n}\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n  refetchContacts: PropTypes.func.isRequired, // Добавление пропса refetchContacts\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n\n  (contacts, filterValue) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue.toLowerCase(), 0)\n    );\n  }\n);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Contact } from '../../components/Contact/Contact';\nimport { Item } from 'components/Contact/Contact.styled';\nimport { useFetchContactsQuery } from 'services/contactsApi';\nimport { selectFilter } from 'redux/selectors';\nimport { Loader } from 'components/Loader/Loader';\n\nexport function ContactList() {\n  const filter = useSelector(selectFilter);\n  const { data: contacts, error, isLoading, refetch } = useFetchContactsQuery();\n\n  const getVisibleContacts = (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const visibleContacts = contacts ? getVisibleContacts(contacts, filter) : [];\n\n  if (isLoading) return <Loader />;\n  if (error) return <p>Error loading contacts: {error.message}</p>;\n\n  return (\n    <ul>\n      {visibleContacts.length === 0 && <Item>No contacts for your search</Item>}\n      {visibleContacts.length > 0 &&\n        visibleContacts.map(item => (\n          <Contact key={item._id} contact={item} refetchContacts={refetch} />\n        ))}\n    </ul>\n  );\n}\n","import styled from 'styled-components';\n\nexport const FilterDiv = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  margin-bottom: 14px;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\nimport { FilterDiv } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = (e) => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <FilterDiv>\n      <label>Find by name:</label>\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={handleChange}\n        placeholder=\"Enter name\"\n      />\n    </FilterDiv>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactDiv = styled.div`\n  margin: 20px auto 0 auto;\n  background-color: #f4f6f7;\n  max-width: 600px;\n  height: 100%;\n  padding: 20px 100px;\n  border-radius: 6px;\n\n  h1 {\n    text-align: center;\n    font-size: 32px;\n  }\n\n  h2 {\n    text-align: center;\n    font-size: 24px;\n    margin-top: 20px;\n    margin-bottom: 16px;\n  }\n  p {\n    text-align: center;\n  }\n`;\n","import React from 'react';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { useFetchContactsQuery } from 'services/contactsApi';\nimport { ContactDiv } from './Contacts.styled';\n\nconst Contacts = () => {\n  const { data: contacts, error, isLoading } = useFetchContactsQuery();\n\n  return (\n    <ContactDiv>\n      <h1>Phonebook</h1>\n      <p>Add contact name & phone:</p>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {error && <b>Error: {error.message}</b>}\n      {isLoading && <Loader />}\n      {contacts && <ContactList />}\n    </ContactDiv>\n  );\n};\n\nexport default Contacts;\n"],"names":["Form","styled","form","_templateObject","_taggedTemplateLiteral","ContactForm","name","setName","useState","number","setNumber","data","contacts","refetch","useFetchContactsQuery","addContact","isLoading","useAddContactMutation","_jsxs","onSubmit","async","e","preventDefault","Array","isArray","find","contact","toLowerCase","Notiflix","failure","concat","unwrap","success","error","children","_jsx","htmlFor","type","value","id","required","onChange","target","Button","colorScheme","size","Item","li","Contact","_ref","refetchContacts","_id","deleteContact","useDeleteContactMutation","onClick","console","selectFilter","state","filter","createSelector","items","filterValue","includes","ContactList","useSelector","visibleContacts","getVisibleContacts","Loader","message","length","map","item","FilterDiv","div","Filter","dispatch","useDispatch","setFilter","placeholder","ContactDiv","Contacts"],"sourceRoot":""}