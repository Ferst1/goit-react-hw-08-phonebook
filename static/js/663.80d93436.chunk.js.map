{"version":3,"file":"static/js/663.80d93436.chunk.js","mappings":"iPAOA,MA8CA,EA9CkBA,KAAO,IAADC,EACtB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,GAAO,UAAEC,EAAS,QAAEC,EAAO,MAAEC,KAAWC,EAAAA,EAAAA,MACzCC,GAAWC,EAAAA,EAAAA,MAgBjB,OACEC,EAAAA,EAAAA,MAAA,QAAMC,SAfaC,UACnBC,EAAMC,iBACN,IACE,MAAMC,QAAiBZ,EAAM,CAAEL,QAAOG,aAAYe,SAClDC,aAAaC,QAAQ,QAASH,EAASI,OACvCF,aAAaC,QAAQ,eAAgBH,EAASK,cAC9CZ,GAASa,EAAAA,EAAAA,IAAa,CAAEF,MAAOJ,EAASI,MAAOC,aAAcL,EAASK,gBACtEE,IAAAA,OAAgBC,QAAQ,iBAC1B,CAAE,MAAOjB,GAAQ,IAADkB,EACdF,IAAAA,OAAgBG,SAAa,OAALnB,QAAK,IAALA,GAAW,QAANkB,EAALlB,EAAOoB,YAAI,IAAAF,OAAN,EAALA,EAAaG,UAAW,mCAChDC,QAAQtB,MAAM,eAAgBA,EAChC,GAI6BuB,SAAA,EAC3BnB,EAAAA,EAAAA,MAAA,SAAAmB,SAAA,CAAO,UAELC,EAAAA,EAAAA,KAAA,SACEC,KAAK,QACLC,MAAOlC,EACPmC,SAAWC,GAAMnC,EAASmC,EAAEC,OAAOH,OACnCI,UAAQ,QAGZ1B,EAAAA,EAAAA,MAAA,SAAAmB,SAAA,CAAO,aAELC,EAAAA,EAAAA,KAAA,SACEC,KAAK,WACLC,MAAO/B,EACPgC,SAAWC,GAAMhC,EAAYgC,EAAEC,OAAOH,OACtCI,UAAQ,QAGZN,EAAAA,EAAAA,KAACO,EAAAA,EAAM,CAACN,KAAK,SAAS3B,UAAWA,EAAUyB,SAAC,WAC3CxB,IAAWK,EAAAA,EAAAA,MAAA,KAAG4B,MAAO,CAAEC,MAAO,OAAQV,SAAA,CAAC,UAAkB,QAAXhC,EAACS,EAAMoB,YAAI,IAAA7B,OAAA,EAAVA,EAAY8B,aACvD,E,cC7CX,MASA,EATca,KAEV9B,EAAAA,EAAAA,MAAA+B,EAAAA,SAAA,CAAAZ,SAAA,EACEC,EAAAA,EAAAA,KAACY,EAAAA,GAAE,CAAAb,SAAC,8BACJC,EAAAA,EAAAA,KAAClC,EAAS,M,mDCNT,MAAM8C,E,OAAKC,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yE","sources":["components/LoginForm/LoginForm.jsx","pages/Login/Login.jsx","pages/Register/Register.styled.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLogInMutation } from 'services/authApi';\r\nimport { setAuthToken } from 'redux/auth/slice';\r\nimport { Button } from '@chakra-ui/react';\r\nimport Notiflix from 'notiflix';\r\n\r\nconst LoginForm = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [logIn, { isLoading, isError, error }] = useLogInMutation();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const userData = await logIn({ email, password }).unwrap();\r\n      localStorage.setItem('token', userData.token);\r\n      localStorage.setItem('refreshToken', userData.refreshToken);\r\n      dispatch(setAuthToken({ token: userData.token, refreshToken: userData.refreshToken }));\r\n      Notiflix.Notify.success('Login success!');\r\n    } catch (error) {\r\n      Notiflix.Notify.failure(error?.data?.message || 'Login failed. Please try again.');\r\n      console.error('Login error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Email:\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        Password:\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n      </label>\r\n      <Button type=\"submit\" isLoading={isLoading}>Log In</Button>\r\n      {isError && <p style={{ color: 'red' }}>Error: {error.data?.message}</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;","import LoginForm from 'components/LoginForm/LoginForm';\r\nimport { H1 } from 'pages/Register/Register.styled';\r\nimport React from 'react';\r\n\r\nconst Login = () => {\r\n  return (\r\n    <>\r\n      <H1>Log in into your account</H1>\r\n      <LoginForm />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import styled from 'styled-components';\r\n\r\nexport const H1 = styled.h1`\r\n  text-align: center;\r\n  margin-top: 24px;\r\n  font-size: 20px;\r\n`;\r\n"],"names":["LoginForm","_error$data2","email","setEmail","useState","password","setPassword","logIn","isLoading","isError","error","useLogInMutation","dispatch","useDispatch","_jsxs","onSubmit","async","event","preventDefault","userData","unwrap","localStorage","setItem","token","refreshToken","setAuthToken","Notiflix","success","_error$data","failure","data","message","console","children","_jsx","type","value","onChange","e","target","required","Button","style","color","Login","_Fragment","H1","styled","h1","_templateObject","_taggedTemplateLiteral"],"sourceRoot":""}