{"version":3,"file":"static/js/444.66a54dc3.chunk.js","mappings":"iOAEaA,EAAOC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mG,mBCA3BC,EAAY,YAgFT,IAAIC,EAAuB,SAA8BC,EAAGC,GACjE,OAAOD,IAAMC,CACf,EAqBO,SAASC,EAAeC,EAAMC,GACnC,IAAIC,EAAoD,kBAA3BD,EAAsCA,EAAyB,CAC1FE,cAAeF,GAEbG,EAAwBF,EAAgBC,cACxCA,OAA0C,IAA1BC,EAAmCR,EAAuBQ,EAC1EC,EAAwBH,EAAgBI,QACxCA,OAAoC,IAA1BD,EAAmC,EAAIA,EACjDE,EAAsBL,EAAgBK,oBACtCC,EA7BC,SAAkCL,GACvC,OAAO,SAAoCM,EAAMC,GAC/C,GAAa,OAATD,GAA0B,OAATC,GAAiBD,EAAKE,SAAWD,EAAKC,OACzD,OAAO,EAMT,IAFA,IAAIA,EAASF,EAAKE,OAETC,EAAI,EAAGA,EAAID,EAAQC,IAC1B,IAAKT,EAAcM,EAAKG,GAAIF,EAAKE,IAC/B,OAAO,EAIX,OAAO,CACT,CACF,CAYmBC,CAAyBV,GACtCW,EAAoB,IAAZR,EA/Gd,SAA8BS,GAC5B,IAAIC,EACJ,MAAO,CACLC,IAAK,SAAaC,GAChB,OAAIF,GAASD,EAAOC,EAAME,IAAKA,GACtBF,EAAMG,MAGRxB,CACT,EACAyB,IAAK,SAAaF,EAAKC,GACrBH,EAAQ,CACNE,IAAKA,EACLC,MAAOA,EAEX,EACAE,WAAY,WACV,OAAOL,EAAQ,CAACA,GAAS,EAC3B,EACAM,MAAO,WACLN,OAAQO,CACV,EAEJ,CAwF8BC,CAAqBhB,GAtFnD,SAAwBF,EAASS,GAC/B,IAAIU,EAAU,GAEd,SAASR,EAAIC,GACX,IAAIQ,EAAaD,EAAQE,WAAU,SAAUX,GAC3C,OAAOD,EAAOG,EAAKF,EAAME,IAC3B,IAEA,GAAIQ,GAAc,EAAG,CACnB,IAAIV,EAAQS,EAAQC,GAOpB,OALIA,EAAa,IACfD,EAAQG,OAAOF,EAAY,GAC3BD,EAAQI,QAAQb,IAGXA,EAAMG,KACf,CAGA,OAAOxB,CACT,CAwBA,MAAO,CACLsB,IAAKA,EACLG,IAxBF,SAAaF,EAAKC,GACZF,EAAIC,KAASvB,IAEf8B,EAAQI,QAAQ,CACdX,IAAKA,EACLC,MAAOA,IAGLM,EAAQd,OAASL,GACnBmB,EAAQK,MAGd,EAaET,WAXF,WACE,OAAOI,CACT,EAUEH,MARF,WACEG,EAAU,EACZ,EAQF,CAmCiEM,CAAezB,EAASE,GAEvF,SAASwB,IACP,IAAIb,EAAQL,EAAMG,IAAIgB,WAEtB,GAAId,IAAUxB,EAAW,CAIvB,GAFAwB,EAAQnB,EAAKkC,MAAM,KAAMD,WAErB1B,EAAqB,CACvB,IAAIkB,EAAUX,EAAMO,aAChBc,EAAgBV,EAAQW,MAAK,SAAUpB,GACzC,OAAOT,EAAoBS,EAAMG,MAAOA,EAC1C,IAEIgB,IACFhB,EAAQgB,EAAchB,MAE1B,CAEAL,EAAMM,IAAIa,UAAWd,EACvB,CAEA,OAAOA,CACT,CAMA,OAJAa,EAASK,WAAa,WACpB,OAAOvB,EAAMQ,OACf,EAEOU,CACT,CC/IA,SAASM,EAAgBC,GACvB,IAAIC,EAAeC,MAAMC,QAAQH,EAAM,IAAMA,EAAM,GAAKA,EAExD,IAAKC,EAAaG,OAAM,SAAUC,GAChC,MAAsB,oBAARA,CAChB,IAAI,CACF,IAAIC,EAAkBL,EAAaM,KAAI,SAAUF,GAC/C,MAAsB,oBAARA,EAAqB,aAAeA,EAAIG,MAAQ,WAAa,YAAcH,CAC3F,IAAGI,KAAK,MACR,MAAM,IAAIC,MAAM,kGAAoGJ,EAAkB,IACxI,CAEA,OAAOL,CACT,CAEO,SAASU,EAAsBC,GACpC,IAAK,IAAIC,EAAOnB,UAAUtB,OAAQ0C,EAAyB,IAAIZ,MAAMW,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IACpHD,EAAuBC,EAAO,GAAKrB,UAAUqB,GAG/C,IAAIC,EAAiB,WACnB,IAAK,IAAIC,EAAQvB,UAAUtB,OAAQ4B,EAAQ,IAAIE,MAAMe,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACrFlB,EAAMkB,GAASxB,UAAUwB,GAG3B,IAEIC,EAFAC,EAAkB,EAOlBC,EAAwB,CAC1BC,oBAAgBtC,GAGduC,EAAavB,EAAMT,MAQvB,GAN0B,kBAAfgC,IACTF,EAAwBE,EAExBA,EAAavB,EAAMT,OAGK,oBAAfgC,EACT,MAAM,IAAIb,MAAM,qFAAuFa,EAAa,KAKtH,IAAIC,EAAwBH,EACxBI,EAAyBD,EAAsBF,eAC/CA,OAA4C,IAA3BG,EAAoCX,EAAyBW,EAM9EC,EAAsBxB,MAAMC,QAAQmB,GAAkBA,EAAiB,CAACA,GACxErB,EAAeF,EAAgBC,GAC/B2B,EAAqBf,EAAQjB,WAAM,EAAQ,CAAC,WAG9C,OAFAyB,IAEOG,EAAW5B,MAAM,KAAMD,UAChC,GAAGkC,OAAOF,IAENG,EAAWjB,GAAQ,WAIrB,IAHA,IAAIkB,EAAS,GACT1D,EAAS6B,EAAa7B,OAEjBC,EAAI,EAAGA,EAAID,EAAQC,IAG1ByD,EAAOC,KAAK9B,EAAa5B,GAAGsB,MAAM,KAAMD,YAK1C,OADAyB,EAAcQ,EAAmBhC,MAAM,KAAMmC,EAE/C,IAeA,OAdAE,OAAOC,OAAOJ,EAAU,CACtBN,WAAYA,EACZI,mBAAoBA,EACpB1B,aAAcA,EACdiC,WAAY,WACV,OAAOf,CACT,EACAgB,eAAgB,WACd,OAAOf,CACT,EACAgB,oBAAqB,WACnB,OAAOhB,EAAkB,CAC3B,IAEKS,CACT,EAGA,OAAOb,CACT,CACO,I,EAAIA,EAAgCL,EAAsBnD,GCrGpD6E,EAAe,SAAAC,GAAK,OAAIA,EAAMC,MAAO,EACrCC,EAAkB,SAAAF,GAAK,OAAIA,EAAMG,SAASC,SAAU,EACpDC,EAAc,SAAAL,GAAK,OAAIA,EAAMG,SAASG,KAAM,EAC5CC,EAAiB,SAAAP,GAAK,OAAIA,EAAMG,SAASK,KAAM,EAE/CC,EAAwB/B,EACnC,CAAC6B,EAAgBR,IAEjB,SAACI,EAAUO,GACT,OAAOP,EAASF,QAAO,SAAAU,GAAO,OAC5BA,EAAQzC,KAAK0C,cAAcC,SAASH,EAAYE,cAAe,EAAE,GAErE,ICLWE,EAAc,WAMzB,MAAO,CAAEX,UALQY,EAAAA,EAAAA,IAAYR,GAKVD,OAJLS,EAAAA,EAAAA,IAAYV,GAIAD,WAHRW,EAAAA,EAAAA,IAAYb,GAGOD,QAFtBc,EAAAA,EAAAA,IAAYhB,GAEkBiB,iBADrBD,EAAAA,EAAAA,IAAYN,GAEtC,E,mBCTaQ,EAAc,WACzB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BhD,EAAIkD,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA4BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBrB,EAAWW,IACXa,GAAWC,EAAAA,EAAAA,MAoBjB,OACEC,EAAAA,EAAAA,MAACnH,EAAI,CAACoH,SAnBa,SAAAC,GAQnB,GAPAA,EAAEC,iBACmBpE,MAAMC,QAAQsC,GAC/BA,EAAS5C,MACP,SAAAoD,GAAO,OAAIA,EAAQzC,KAAK0C,gBAAkB1C,EAAK0C,aAAa,IAE9D,KAIF,OADAqB,MAAM,GAAD3C,OAAIpB,EAAI,6BACN,EAGTyD,GAASO,EAAAA,EAAAA,IAAW,CAAEhE,KAAAA,EAAMuD,OAAAA,KAC5BH,EAAQ,IACRI,EAAU,GACZ,EAG+BS,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,YAAWF,SAAC,UAC3BC,EAAAA,EAAAA,KAAA,SACEE,KAAK,OACLpE,KAAK,OACL5B,MAAO4B,EACPqE,GAAG,YACHC,UAAQ,EACRC,SAAU,SAAAV,GAAC,OAAIT,EAAQS,EAAEW,OAAOpG,MAAM,KAExC8F,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,cAAaF,SAAC,YAC7BC,EAAAA,EAAAA,KAAA,SACEE,KAAK,MACLpE,KAAK,SACL5B,MAAOmF,EACPc,GAAG,cACHC,UAAQ,EACRC,SAAU,SAAAV,GAAC,OAAIL,EAAUK,EAAEW,OAAOpG,MAAM,KAE1C8F,EAAAA,EAAAA,KAACO,EAAAA,EAAM,CAACC,YAAY,OAAOC,KAAK,KAAKP,KAAK,SAAQH,SAAC,kBAKzD,ECtDaW,EAAOnI,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+HCItB,SAASkI,EAAOC,GAAe,IAAZrC,EAAOqC,EAAPrC,QAClBgB,GAAWC,EAAAA,EAAAA,MACTW,EAAqB5B,EAArB4B,GAAIrE,EAAiByC,EAAjBzC,KAAMuD,EAAWd,EAAXc,OAGlB,OACEI,EAAAA,EAAAA,MAACiB,EAAI,CAAAX,SAAA,EACHN,EAAAA,EAAAA,MAAA,KAAAM,SAAA,CACGjE,EAAK,MAAIuD,MAEZW,EAAAA,EAAAA,KAACO,EAAAA,EAAM,CACLC,YAAY,OACZC,KAAK,KACLP,KAAK,SACLW,QAXsB,WAAH,OAAStB,GAASuB,EAAAA,EAAAA,IAAcX,GAAK,EAW3BJ,SAC9B,aAKP,CCnBO,SAASgB,IACd,IAAMxB,GAAWC,EAAAA,EAAAA,MACTZ,EAAoBF,IAApBE,gBAMR,OAJAoC,EAAAA,EAAAA,YAAU,WACRzB,GAAS0B,EAAAA,EAAAA,IAAc,aACzB,GAAG,CAAC1B,KAGFE,EAAAA,EAAAA,MAAA,MAAAM,SAAA,CAC8B,IAA3BnB,EAAgBlF,SAAgBsG,EAAAA,EAAAA,KAACU,EAAI,CAAAX,SAAC,gCACtCnB,EAAgBlF,OAAS,GACxBkF,EAAgB/C,KAAI,SAAAqF,GAClB,OAAOlB,EAAAA,EAAAA,KAACW,EAAO,CAAepC,QAAS2C,EAAMf,GAAIe,EAAKf,IAAjCe,EAAKf,GAC5B,MAGR,C,kBCtBagB,EAAY5I,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iHCItB2I,EAAS,WACpB,IAAMvD,EAASa,IACTa,GAAWC,EAAAA,EAAAA,MAGjB,OACEC,EAAAA,EAAAA,MAAC0B,EAAS,CAAApB,SAAA,EACRC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oBACPC,EAAAA,EAAAA,KAAA,SACEE,KAAK,OACLpE,KAAK,SACL5B,MAAO2D,EAAOA,OACdwD,YAAY,aACZhB,SAAU,SAAAV,GAAC,OATA,SAAAA,GAAC,OAAIJ,GAAS+B,EAAAA,EAAAA,GAAU3B,EAAEW,OAAOpG,OAAQ,CASrCmG,CAASV,EAAE,MAIlC,E,UCrBa4B,EAAahJ,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4WCwBpC,EAjBiB,WACf,IAAMuF,GAAYW,EAAAA,EAAAA,IAAYb,GACxBI,GAAQS,EAAAA,EAAAA,IAAYV,GAC1B,OACEwB,EAAAA,EAAAA,MAAC8B,EAAU,CAAAxB,SAAA,EACTC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,+BACHC,EAAAA,EAAAA,KAACnB,EAAW,KACZmB,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAACoB,EAAM,IACNlD,IAASuB,EAAAA,EAAAA,MAAA,KAAAM,SAAA,CAAG,UAAQ7B,KACpBF,IAAagC,EAAAA,EAAAA,KAACwB,EAAAA,EAAM,KACrBxB,EAAAA,EAAAA,KAACe,EAAW,MAGlB,C","sources":["components/ContactForm/ContactForm.styled.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","hooks/useContacts.js","components/ContactForm/ContactForm.jsx","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  input {\n    margin-bottom: 14px;\n  }\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n\n  (contacts, filterValue) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue.toLowerCase(), 0)\n    );\n  }\n);\n","import { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n  selectFilter,\n  selectVisibleContacts,\n} from 'redux/selectors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n  const filter = useSelector(selectFilter);\n  const visibleContacts = useSelector(selectVisibleContacts);\n  return { contacts, error, isLoading, filter, visibleContacts };\n};\n","import React, { useState } from 'react';\nimport { Form } from './ContactForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { useContacts } from 'hooks/useContacts';\nimport { Button } from '@chakra-ui/react';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useContacts();\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchResult = Array.isArray(contacts)\n      ? contacts.find(\n          contact => contact.name.toLowerCase() === name.toLowerCase()\n        )\n      : null;\n\n    if (searchResult) {\n      alert(`${name} is already in contacts`);\n      return false;\n    }\n\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <label htmlFor=\"inputName\">Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        id=\"inputName\"\n        required\n        onChange={e => setName(e.target.value)}\n      />\n      <label htmlFor=\"inputNumber\">Number</label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        id=\"inputNumber\"\n        required\n        onChange={e => setNumber(e.target.value)}\n      />\n      <Button colorScheme=\"blue\" size=\"sm\" type=\"submit\">\n        Add contact\n      </Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n\n  button {\n    padding: 0 10px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Item } from './Contact.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { Button } from '@chakra-ui/react';\n\nexport function Contact({ contact }) {\n  const dispatch = useDispatch();\n  const { id, name, number } = contact;\n  const handleDeleteContact = () => dispatch(deleteContact(id));\n\n  return (\n    <Item>\n      <p>\n        {name} : {number}\n      </p>\n      <Button\n        colorScheme=\"blue\"\n        size=\"xs\"\n        type=\"button\"\n        onClick={handleDeleteContact}\n      >\n        Delete\n      </Button>\n    </Item>\n  );\n}\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import { Contact } from 'components/Contact/Contact';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\nimport { Item } from 'components/Contact/Contact.styled';\nimport { useContacts } from 'hooks/useContacts';\n\nexport function ContactList() {\n  const dispatch = useDispatch();\n  const { visibleContacts } = useContacts();\n\n  useEffect(() => {\n    dispatch(fetchContacts('/contacts'));\n  }, [dispatch]);\n\n  return (\n    <ul>\n      {visibleContacts.length === 0 && <Item>No contacts for your search</Item>}\n      {visibleContacts.length > 0 &&\n        visibleContacts.map(item => {\n          return <Contact key={item.id} contact={item} id={item.id} />;\n        })}\n    </ul>\n  );\n}\n","import styled from 'styled-components';\n\nexport const FilterDiv = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  margin-bottom: 14px;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { FilterDiv } from './Filter.styled';\nimport { useContacts } from 'hooks/useContacts';\n\nexport const Filter = () => {\n  const filter = useContacts();\n  const dispatch = useDispatch();\n\n  const onChange = e => dispatch(setFilter(e.target.value));\n  return (\n    <FilterDiv>\n      <label>Find by name: </label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter.filter}\n        placeholder=\"Enter name\"\n        onChange={e => onChange(e)}\n      />\n    </FilterDiv>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactDiv = styled.div`\n  margin: 20px auto 0 auto;\n  background-color: #f4f6f7;\n  max-width: 600px;\n  height: 100%;\n  padding: 20px 100px;\n  border-radius: 6px;\n\n  h1 {\n    text-align: center;\n    font-size: 32px;\n  }\n\n  h2 {\n    text-align: center;\n    font-size: 24px;\n    margin-top: 20px;\n    margin-bottom: 16px;\n  }\n  p {\n    text-align: center;\n  }\n`;\n","import React from 'react';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/selectors';\nimport { ContactDiv } from './Contacts.styled';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  return (\n    <ContactDiv>\n      <h1>Phonebook</h1>\n      <p>Add contact name & phone:</p>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {error && <b>Error: {error}</b>}\n      {isLoading && <Loader />}\n      <ContactList />\n    </ContactDiv>\n  );\n};\n\nexport default Contacts;\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectFilter","state","filter","selectIsLoading","contacts","isLoading","selectError","error","selectContacts","items","selectVisibleContacts","filterValue","contact","toLowerCase","includes","useContacts","useSelector","visibleContacts","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","_jsxs","onSubmit","e","preventDefault","alert","addContact","children","_jsx","htmlFor","type","id","required","onChange","target","Button","colorScheme","size","Item","Contact","_ref","onClick","deleteContact","ContactList","useEffect","fetchContacts","item","FilterDiv","Filter","placeholder","setFilter","ContactDiv","Loader"],"sourceRoot":""}